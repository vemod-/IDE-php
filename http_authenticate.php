<?php

    /**

     * Authenticate a user against a password file generated by Apache's httpasswd

     * using PHP rather than Apache itself.

     *

     * @param string $user The submitted user name

     * @param string $pass The submitted password

     * @param string $pass_file='.htpasswd' The system path to the htpasswd file

     * @param string $crypt_type='DES' The crypt type used to create the htpasswd file

     * @return bool NO, now it returns the matching line number in the pwd file or false 

     */

    function http_authenticate($user,$pass,$pass_file='.htpasswd',$crypt_type='DES'){

        // the stuff below is just an example useage that restricts

        // user names and passwords to only alpha-numeric characters.

        if(!ctype_alnum($user)){

            // invalid user name

            return FALSE;

        }

        

        if(!ctype_alnum($pass)){

            // invalid password

            return FALSE;

        }

        // get the information from the htpasswd file

        if(file_exists($pass_file) && is_readable($pass_file)){

            // the password file exists, open it

            if($fp=fopen($pass_file,'r')){
                $i=0;
                while($line=fgets($fp)){
                    $i++;
                    // for each line in the file remove line endings

                    $line=preg_replace('`[\r\n]$`','',$line);

                    list($fuser,$fpass)=explode(':',$line);

                    if($fuser==$user){

                        // the submitted user name matches this line

                        // in the file

                        switch($crypt_type){

                            case 'DES':

                                // the salt is the first 2

                                // characters for DES encryption

                                $salt=substr($fpass,0,2);

                                

                                // use the salt to encode the

                                // submitted password

                                $test_pw=crypt($pass,$salt);

                                break;

                            case 'PLAIN':

                                $test_pw=$pass;

                                break;

                            case 'SHA':

                                $test_pw=sha1($pass);

                                break;

                            case 'MD5':

                                $test_pw=md5($pass);

                                break;

                            default:

                                // unsupported crypt type

                                fclose($fp);

                                return FALSE;

                        }
                        if($test_pw == $fpass){

                            // authentication success.

                            fclose($fp);

                            return $i;

                        }else{

                            return FALSE;

                        }

                    }

                }

                fclose($fp);

            }else{

                // could not open the password file

                return FALSE;

            }

        }else{

            return FALSE;

        }

    }
    
    if(isset($_SERVER['PHP_AUTH_USER']) && isset($_SERVER['PHP_AUTH_PW']))
    {
        // this simply means that they have submitted the login form for this realm
        $auth=http_authenticate($_SERVER['PHP_AUTH_USER'],$_SERVER['PHP_AUTH_PW'],'./.htpwd','MD5');
        define('USER_AUTHENTICATED',$auth);
    }

	if((!defined('USER_AUTHENTICATED')) || (!USER_AUTHENTICATED))
	{
        if ($_POST['action']=='logout')
        {
            echo "<h3>Logged out!</h3><h4>Go <a href=\"http://".$_SERVER['HTTP_HOST'].$_SERVER[PHP_SELF]."\">back to the site</a>.</h4>";
            exit;        
        }
       	// the user has not been authenticated, present a login form.
        header('WWW-Authenticate: Basic realm="IDE.PHP"');
       	header('HTTP/1.0 401 Unauthorized');
        
        // if cancel the login form, below is what they get
       	echo '<h3>Authentication is required to view this page.</h3><h4><a href="" onClick="window.location=\''.$myurl.'\'">Try again</a>.</h4>';
       	exit;
	}

        // authentication successful - show the content    

?>