<?php
/*******************************************************************************\
*    IDE.PHP, a web based editor for quick PHP development                     *
*    Copyright (C) 2000  Johan Ekenberg                                        *
*                                                                              *
*    This program is free software; you can redistribute it and/or modify      *
*    it under the terms of the GNU General Public License as published by      *
*    the Free Software Foundation; either version 2 of the License, or         *
*    (at your option) any later version.                                       *
*                                                                              *
*    This program is distributed in the hope that it will be useful,           *
*    but WITHOUT ANY WARRANTY; without even the implied warranty of            *
*    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
*    GNU General Public License for more details.                              *
*                                                                              *
*    You should have received a copy of the GNU General Public License         *
*    along with this program; if not, write to the Free Software               *
*    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA *
*                                                                              *
*    To contact the author regarding this program,                             *
*    please use this email address: <ide.php@ekenberg.se>                      *
\*******************************************************************************/

class Page {
	var $Bgcolor		= "#E0E4EA";
	var $Box_color	= "#2d2d2d";
	var $Box_bgcolor	= "#ffffff";
	var $Link_color	= "#0A0AA0";
	var $Alink_color	= "#0000CC";
	var $Vlink_color	= "#464686";
	public string $CSS_code = "";
	public string $JS_code = "";

	function html_top($encoding="UTF-8") {
	    $ret = "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">";
		$ret.="<html><head>";
		$ret .= "<meta http-equiv=\"Content-Type\" content=\"text/html; charset=$encoding\">";
		$ret .= "<script type=\"text/javascript\" src=\"javascript/jshttpauth.js\"></script>";
		$ret.="<link REL=\"STYLESHEET\" TYPE=\"text/css\" HREF=\"css/lightbox.css\">\n";    
		$ret.="<link REL=\"STYLESHEET\" TYPE=\"text/css\" HREF=\"css/ide.php.css\">\n";
		$ret .= "<script type=\"text/javascript\" src=\"javascript/php_serializer.js\"></script>\n";    
		$ret .= "<script type=\"text/javascript\" src=\"javascript/lightbox.js\"></script>\n";
		$ret .= "<script src=\"javascript/ide.php.js\" type=\"text/javascript\"></script>\n";    
	   $ret .= "<TITLE>I D E . P H P</TITLE>\n";
	   $ret .= "{$this->CSS_code}\n";
	   $ret .= "{$this->JS_code}\n";   
	   $ret .= "</HEAD>\n";
	   $ret .= "<BODY BGCOLOR='{$this->Bgcolor}' LINK='{$this->Link_color}' ALINK='{$this->Alink_color}' VLINK='{$this->Vlink_color}'>\n";
	   return ($ret);
	}
	
	function html_bottom() {
	   return "</BODY></HTML>\n";
	}
	
	function begin_invisible_table($width, $attr="") {
	   $ret = "<TABLE WIDTH='$width' BORDER='0' ";
	   $ret .= (is_array($attr) ? join(" ", $attr) : NULL) . ">\n";
	   return ($ret);
	}
	
	function end_invisible_table() {
	   $ret = "</TABLE>\n";
	   return ($ret);
	}
	
	function start_box_table($attr="") {
	   $ret = "<TABLE BORDER='0' CELLPADDING='10' CELLSPACING='1' BGCOLOR='{$this->Box_color}' ALIGN='center' ";
	   $ret .= (is_array($attr) ? join(" ", $attr) : NULL) . ">\n";
	   return ($ret);
	}
	
	function end_box_table() {
	   $ret = "</TABLE>\n";
	   return ($ret);
	}
	
	function info_box($width, $content) {
	   $ret = $this->start_box_table(array("WIDTH='$width'"));
	   $ret .= "<TR BGCOLOR='{$this->Box_bgcolor}'><TD>\n";
	   $ret .= $content;
	   $ret .= "</TD></TR>\n";
	   $ret .= $this->end_box_table();
	   return($ret);
	}
	
	function menu_item($caption,$action,$disabled=false,$checked=false)
	{
		$checkmark='&nbsp;';
		if ($checked)
		{
			$checkmark="&nbsp;&#10003;";
		}
		$caption="<span style='position:absolute;left:-7px;'>$checkmark</span>$caption&nbsp;&nbsp;";
		if ($disabled)
		{
			return "<li class='disabled'>$caption</li>\n";
		}
		return "<li><a href='#' onClick='$action'>$caption</a></li>\n";
	}

	function menu_create($caption, $items)
	{
		$ret = "";
		global $menu_id;
		$menu_id++;
		if ($caption != '')
		{   
			$ret .= "<div class='inside_menu'>\n";
			$ret .="<div class='navcontainer'>\n";
			$ret .="<ul class='navlist' onMouseOver='showLayer(\"sub_$menu_id\")' onMouseOut='hideLayer(\"sub_$menu_id\")'>\n";
			$ret .="<li><a href='#' id='current'>$caption</a></li>\n";
		}
		else
		{
			$ret .= "<div class='inside_menu' style='padding:0px;margin:0px;visibility:hidden;'>\n";
			$ret .="<div class='navcontainer'>\n";
			$ret .="<ul class='navlist' style='visibility:hidden;' onMouseOver='showLayer(\"sub_$menu_id\")' onMouseOut='hideLayer(\"sub_$menu_id\")'>\n";
			$ret .="<li style='visibility:hidden;'>\n";
			$ret .="<a href='#' id='current' style='padding:0px;margin:0px;padding-right:3px;visibility:hidden;height:21px;'></a></li>\n";
		}
		$ret .= "<span id='sub_$menu_id' class='navsubbox'><span class='insidesubbox'>$items</span></span>\n";
		$ret .="</ul></div>";   
		$ret .="</div>\n";
		return $ret;
	}
	
	function menu_button($caption,$action,$disabled=false,$checked=false,$right_align=false)
	{
		$ret = "";
		if ($right_align)
		{
			$ret .= "<div class='inside_menu' style='float:right;clear:left;'>";    
		}
		else
		{
			$ret .= "<div class='inside_menu'>";
		}    
		$buttonclass="class='btn'";    
		if ($disabled)
		{
			$buttonclass="disabled class='btndisabled'";
		}     
		if ($checked)
		{
			$buttonclass="class='btnpressed'";    
		}   
		$ret .= "<a href='#' $buttonclass onClick='$action'>$caption</a>\n";
		$ret.="</div>";
		return $ret;
	}

	function select_list($name,$value,$items)
	{
		$ret ="<select name='$name'>";
		for ($i=0;$i<count($items);$i++)
		{
			$selected=($i+1==$value) ? ' selected':'';
			$j=$i+1;
			$ret.="<option value='$j'$selected>{$items[$i]}</option>";
		}
		$ret.="</select>";
		return $ret;
	}

	function select_list_associated($name, $selectedValue, $items)
	{
		$ret = "<select name='$name'>";
		foreach ($items as $value => $label) {
			$selected = ($value === $selectedValue) ? ' selected' : '';
			$ret .= "<option value='$value'$selected>$label</option>";
		}
		$ret .= "</select>";
		return $ret;
	}
	
	function __construct() {
	   $this->CSS_code = "";
	
	   $this->JS_code = "";
	}
}
?>
